import { toast } from "@/hooks/use-toast";

export type NotificationType = "success" | "error" | "warning" | "info";

export interface NotificationConfig {
  title: string;
  description?: string;
  type: NotificationType;
  duration?: number;
}

export const useNotifications = () => {
  const showNotification = ({
    title,
    description,
    type,
    duration = 3000,
  }: NotificationConfig) => {
    const variant = type === "error" ? "destructive" : "default";

    toast({
      title,
      description,
      variant,
      duration,
    });
  };

  // Notifications sp√©cifiques pour les actions courantes
  const notifications = {
    // Commandes
    orderCreated: (orderNumber: string) =>
      showNotification({
        title: "üéâ Commande enregistr√©e",
        description: `Commande ${orderNumber} transmise en cuisine`,
        type: "success",
      }),

    orderValidated: (orderNumber: string) =>
      showNotification({
        title: "‚úÖ Commande confirm√©e",
        description: `Commande ${orderNumber} prise en charge`,
        type: "success",
      }),

    orderServed: (orderNumber: string) =>
      showNotification({
        title: "üçΩÔ∏è Service termin√©",
        description: `Commande ${orderNumber} servie √† table`,
        type: "success",
      }),

    orderCancelled: (orderNumber: string) =>
      showNotification({
        title: "‚ö†Ô∏è Commande annul√©e",
        description: `Commande ${orderNumber} retir√©e du syst√®me`,
        type: "warning",
      }),

    orderDeleted: (orderNumber: string) =>
      showNotification({
        title: "üóëÔ∏è Commande supprim√©e",
        description: `Commande ${orderNumber} effac√©e d√©finitivement`,
        type: "error",
      }),

    // Articles/Menu
    articleAdded: (articleName: string) =>
      showNotification({
        title: "üçΩÔ∏è Article ajout√©",
        description: `${articleName} ajout√© √† la commande`,
        type: "success",
        duration: 2500,
      }),

    articleRemoved: (articleName: string) =>
      showNotification({
        title: "üóëÔ∏è Article retir√©",
        description: `${articleName} retir√© de la commande`,
        type: "info",
        duration: 2500,
      }),

    articleAddedToMenu: (articleName: string) =>
      showNotification({
        title: "üìã Ajout√© au menu",
        description: `${articleName} disponible en cuisine`,
        type: "success",
      }),

    articleCreated: (articleName: string) =>
      showNotification({
        title: "‚ú® Nouvel article cr√©√©",
        description: `${articleName} ajout√© au catalogue`,
        type: "success",
      }),

    // Quantit√©s
    quantityUpdated: (articleName: string, quantity: number) =>
      showNotification({
        title: "üìä Quantit√© ajust√©e",
        description: `${articleName} √ó ${quantity}`,
        type: "info",
        duration: 2000,
      }),

    // Gestion des tables
    tableNumberChanged: (oldTable: string, newTable: string) =>
      showNotification({
        title: "ü™ë Table modifi√©e",
        description: `${oldTable} ‚Üí ${newTable}`,
        type: "info",
        duration: 2500,
      }),

    // Recherche et filtres
    searchPerformed: (query: string, results: number) =>
      showNotification({
        title: "Recherche effectu√©e",
        description: `${results} r√©sultat(s) trouv√©(s) pour "${query}"`,
        type: "info",
        duration: 2000,
      }),

    filterApplied: (filterType: string, filterValue: string) =>
      showNotification({
        title: "Filtre appliqu√©",
        description: `${filterType}: ${filterValue}`,
        type: "info",
        duration: 2000,
      }),

    // Actions administratives
    dataExported: (type: string) =>
      showNotification({
        title: "Donn√©es export√©es",
        description: `Export ${type} termin√© avec succ√®s`,
        type: "success",
      }),

    settingsSaved: () =>
      showNotification({
        title: "Param√®tres sauvegard√©s",
        description: "Vos param√®tres ont √©t√© enregistr√©s",
        type: "success",
      }),

    // Erreurs communes
    networkError: () =>
      showNotification({
        title: "Erreur de connexion",
        description: "V√©rifiez votre connexion internet",
        type: "error",
      }),

    unauthorized: () =>
      showNotification({
        title: "Acc√®s non autoris√©",
        description: "Vous n'avez pas les droits pour cette action",
        type: "error",
      }),

    serverError: () =>
      showNotification({
        title: "Erreur serveur",
        description: "Une erreur est survenue. Veuillez r√©essayer",
        type: "error",
      }),

    // Actions g√©n√©riques - d√©sactiv√©es pour √©viter le spam
    actionSuccess: (action: string) => {
      // Notification d√©sactiv√©e pour √©viter les notifications inutiles
      // console.log(`Action r√©ussie: ${action}`);
    },

    actionError: (action: string, error?: string) =>
      showNotification({
        title: "√âchec de l'action",
        description: error || `Impossible d'effectuer ${action}`,
        type: "error",
      }),

    // Sidebar et navigation - notifications d√©sactiv√©es
    sidebarToggled: (isOpen: boolean) => {
      // Notification d√©sactiv√©e pour √©viter les notifications inutiles
      // console.log(`Menu ${isOpen ? "ouvert" : "ferm√©"}`);
    },
  };

  return {
    showNotification,
    notifications,
  };
};
